#!/usr/bin/env python

# IOTA 6-6 with NLINSERT

import synergia

lattice_file = """
beam,
  particle=proton,
  gamma=1.00266447;

DEDGE: DIPEDGE,fint=0.5,h=1.428571428,hgap=0.01;
D0_045: DRIFT,l=0.045;
D0_0625: DRIFT,l=0.0625;
D0_09: DRIFT,l=0.09;
D0_1075: DRIFT,l=0.1075;
D0_1275: DRIFT,l=0.1275;
D0_127500001: DRIFT,l=0.127500001;
D0_13: DRIFT,l=0.13;
D0_135: DRIFT,l=0.135;
D0_1625: DRIFT,l=0.1625;
D0_2075: DRIFT,l=0.2075;
D0_3075: DRIFT,l=0.3075;
D0_355: DRIFT,l=0.355;
D0_3725: DRIFT,l=0.3725;
D0_42: DRIFT,l=0.42;
D0_4625: DRIFT,l=0.4625;
D0_6275: DRIFT,l=0.6275;
D0_645: DRIFT,l=0.645;
D0_7875: DRIFT,l=0.7875;
D0_9: DRIFT,l=0.9;
D1_1275: DRIFT,l=1.1275;
D1_61: DRIFT,l=1.61;
RFC: DRIFT,l=0.05;
EL1: MARKER;
EL2: MARKER;
IOL: MARKER;
IOR: MARKER;
NLL1: MARKER;
NLL2: MARKER;
NLR1: MARKER;
NLR2: MARKER;
IBPMA1L: MONITOR;
IBPMA1R: MONITOR;
IBPMA2L: MONITOR;
IBPMA2R: MONITOR;
IBPMB1L: MONITOR;
IBPMB1R: MONITOR;
IBPMB2L: MONITOR;
IBPMB2R: MONITOR;
IBPMC1L: MONITOR;
IBPMC1R: MONITOR;
IBPMC2L: MONITOR;
IBPMC2R: MONITOR;
IBPMD1L: MONITOR;
IBPMD1R: MONITOR;
IBPMD2L: MONITOR;
IBPMD2R: MONITOR;
IBPME1L: MONITOR;
IBPME1R: MONITOR;
IBPME2L: MONITOR;
IBPME2R: MONITOR;
! INSERT: NLINSERT,extractor_type="chef_propagate",l=1.8,phase=0.3,t=0.4;
INSERT.NLINSERT.D0_045: DRIFT,l=0.045;
INSERT.NLINSERT.D0_09: DRIFT,l=0.09;
INSERT.NLINSERT.1: NLLENS,cnll=0.013311102471649506,extractor_type="chef_propagate",knll=2.0317695499823542e-06;
INSERT.NLINSERT.2: NLLENS,cnll=0.012445403243733028,extractor_type="chef_propagate",knll=2.324259181669341e-06;
INSERT.NLINSERT.3: NLLENS,cnll=0.011621882904432295,extractor_type="chef_propagate",knll=2.6653209314328795e-06;
INSERT.NLINSERT.4: NLLENS,cnll=0.010850149770689752,extractor_type="chef_propagate",knll=3.057954609404607e-06;
INSERT.NLINSERT.5: NLLENS,cnll=0.010142032602260266,extractor_type="chef_propagate",knll=3.499874698958059e-06;
INSERT.NLINSERT.6: NLLENS,cnll=0.009511749997822148,extractor_type="chef_propagate",knll=3.979070618159703e-06;
INSERT.NLINSERT.7: NLLENS,cnll=0.008975713798560936,extractor_type="chef_propagate",knll=4.468528256385335e-06;
INSERT.NLINSERT.8: NLLENS,cnll=0.008551665090678706,extractor_type="chef_propagate",knll=4.922674638865199e-06;
INSERT.NLINSERT.9: NLLENS,cnll=0.008256875977598102,extractor_type="chef_propagate",knll=5.2804505280122775e-06;
INSERT.NLINSERT.10: NLLENS,cnll=0.008105461951831525,extractor_type="chef_propagate",knll=5.479576037284235e-06;
INSERT.NLINSERT.11: NLLENS,cnll=0.008105461951831525,extractor_type="chef_propagate",knll=5.479576037284235e-06;
INSERT.NLINSERT.12: NLLENS,cnll=0.008256875977598103,extractor_type="chef_propagate",knll=5.280450528012277e-06;
INSERT.NLINSERT.13: NLLENS,cnll=0.008551665090678708,extractor_type="chef_propagate",knll=4.922674638865198e-06;
INSERT.NLINSERT.14: NLLENS,cnll=0.008975713798560936,extractor_type="chef_propagate",knll=4.468528256385335e-06;
INSERT.NLINSERT.15: NLLENS,cnll=0.00951174999782215,extractor_type="chef_propagate",knll=3.979070618159701e-06;
INSERT.NLINSERT.16: NLLENS,cnll=0.010142032602260266,extractor_type="chef_propagate",knll=3.499874698958059e-06;
INSERT.NLINSERT.17: NLLENS,cnll=0.010850149770689752,extractor_type="chef_propagate",knll=3.057954609404607e-06;
INSERT.NLINSERT.18: NLLENS,cnll=0.011621882904432296,extractor_type="chef_propagate",knll=2.6653209314328787e-06;
INSERT.NLINSERT.19: NLLENS,cnll=0.012445403243733028,extractor_type="chef_propagate",knll=2.324259181669341e-06;
INSERT.NLINSERT.20: NLLENS,cnll=0.013311102471649506,extractor_type="chef_propagate",knll=2.031769549982354e-06;
QMA1L: QUADRUPOLE,k1=-9.000671334,l=0.21;
QMA1R: QUADRUPOLE,k1=-9.000671334,l=0.21;
QMA2L: QUADRUPOLE,k1=12.84668182,l=0.21;
QMA2R: QUADRUPOLE,k1=12.84668182,l=0.21;
QMA3L: QUADRUPOLE,k1=-13.17447732,l=0.21;
QMA3R: QUADRUPOLE,k1=-13.17447732,l=0.21;
QMA4L: QUADRUPOLE,k1=20.52183189,l=0.21;
QMA4R: QUADRUPOLE,k1=20.52183189,l=0.21;
QMB1L: QUADRUPOLE,k1=-10.08246082,l=0.21;
QMB1R: QUADRUPOLE,k1=-10.08246082,l=0.21;
QMB2L: QUADRUPOLE,k1=15.94204263,l=0.21;
QMB2R: QUADRUPOLE,k1=15.94204263,l=0.21;
QMB3L: QUADRUPOLE,k1=-8.105312319,l=0.21;
QMB3R: QUADRUPOLE,k1=-8.105312319,l=0.21;
QMB4L: QUADRUPOLE,k1=-8.072427002,l=0.21;
QMB4R: QUADRUPOLE,k1=-8.072427002,l=0.21;
QMB5L: QUADRUPOLE,k1=14.26726775,l=0.21;
QMB5R: QUADRUPOLE,k1=14.26726775,l=0.21;
QMB6L: QUADRUPOLE,k1=-11.88415788,l=0.21;
QMB6R: QUADRUPOLE,k1=-11.88415788,l=0.21;
QMC1L: QUADRUPOLE,k1=-13.14610552,l=0.21;
QMC1R: QUADRUPOLE,k1=-13.14610552,l=0.21;
QMC2L: QUADRUPOLE,k1=11.98348508,l=0.21;
QMC2R: QUADRUPOLE,k1=11.98348508,l=0.21;
QMC3L: QUADRUPOLE,k1=-13.62421938,l=0.21;
QMC3R: QUADRUPOLE,k1=-13.62421938,l=0.21;
QMD1L: QUADRUPOLE,k1=-6.650112158,l=0.21;
QMD1R: QUADRUPOLE,k1=-6.650112158,l=0.21;
QMD2L: QUADRUPOLE,k1=4.609889982,l=0.21;
QMD2R: QUADRUPOLE,k1=4.609889982,l=0.21;
QMD3L: QUADRUPOLE,k1=-5.647016383,l=0.21;
QMD3R: QUADRUPOLE,k1=-5.647016383,l=0.21;
QMD4L: QUADRUPOLE,k1=5.637104976,l=0.21;
QMD4R: QUADRUPOLE,k1=5.637104976,l=0.21;
QME1L: QUADRUPOLE,k1=-4.975556379,l=0.21;
QME1R: QUADRUPOLE,k1=-4.975556379,l=0.21;
QME2L: QUADRUPOLE,k1=5.442378487,l=0.21;
QME2R: QUADRUPOLE,k1=5.442378487,l=0.21;
QME3: QUADRUPOLE,k1=-6.771164383,l=0.21;
B30: SBEND,angle=0.5235987756,l=0.3665191429;
B60: SBEND,angle=1.047197551,l=0.7330382858;
SC1L: SEXTUPOLE,l=0.1;
SC1R: SEXTUPOLE,l=0.1;
SC2L: SEXTUPOLE,l=0.1;
SC2R: SEXTUPOLE,l=0.1;
SD1L: SEXTUPOLE,l=0.095;
SD1R: SEXTUPOLE,l=0.095;
SE1L: SEXTUPOLE,l=0.1;
SE1R: SEXTUPOLE,l=0.1;
CEL: SOLENOID,l=0.7;
IOTA: LINE=(INSERT.NLINSERT.D0_045,INSERT.NLINSERT.1,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.2,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.3,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.4,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.5,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.6,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.7,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.8,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.9,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.10,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.11,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.12,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.13,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.14,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.15,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.16,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.17,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.18,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.19,INSERT.NLINSERT.D0_09,INSERT.NLINSERT.20,INSERT.NLINSERT.D0_045,NLR2,D0_045,IBPMB2R,D0_1075,QMB4R,D0_13,QMB5R,D0_13,QMB6R,D0_3725,DEDGE,B60,DEDGE,D0_355,IBPMC1R,D0_1075,QMC1R,D0_1275,SC1R,D0_1275,QMC2R,D0_127500001,SC2R,D0_1275,QMC3R,D0_1075,IBPMC2R,D0_355,DEDGE,B60,DEDGE,D0_355,IBPMD1R,D0_3075,QMD1R,D0_1625,SD1R,D0_1625,QMD2R,D0_4625,EL1,CEL,EL2,D0_4625,QMD3R,D0_42,QMD4R,D0_3075,IBPMD2R,D0_355,DEDGE,B30,DEDGE,D0_355,IBPME1R,D0_2075,QME1R,D1_1275,IBPME2R,D0_1075,QME2R,D0_0625,SE1R,D0_645,QME3,D0_645,SE1L,D0_0625,QME2L,D0_1075,IBPME2L,D1_1275,QME1L,D0_2075,IBPME1L,D0_355,DEDGE,B30,DEDGE,D0_355,IBPMD2L,D0_3075,QMD4L,D0_42,QMD3L,D0_7875,RFC,D0_7875,QMD2L,D0_1625,SD1L,D0_1625,QMD1L,D0_3075,IBPMD1L,D0_355,DEDGE,B60,DEDGE,D0_355,IBPMC2L,D0_1075,QMC3L,D0_1275,SC2L,D0_1275,QMC2L,D0_1275,SC1L,D0_1275,QMC1L,D0_1075,IBPMC1L,D0_355,DEDGE,B60,DEDGE,D0_3725,QMB6L,D0_13,QMB5L,D0_13,QMB4L,D0_1075,IBPMB2L,D0_045,NLL1,D0_9,IOL,D0_9,NLL2,D0_045,IBPMB1L,D0_1075,QMB3L,D0_13,QMB2L,D0_13,QMB1L,D0_3725,DEDGE,B30,DEDGE,D0_3725,QMA4L,D0_135,QMA3L,D0_1075,IBPMA2L,D0_6275,QMA2L,D0_135,QMA1L,D0_1075,IBPMA1L,D1_61,IBPMA1R,D0_1075,QMA1R,D0_135,QMA2R,D0_6275,IBPMA2R,D0_1075,QMA3R,D0_135,QMA4R,D0_3725,DEDGE,B30,DEDGE,D0_3725,QMB1R,D0_13,QMB2R,D0_13,QMB3R,D0_1075,IBPMB1R,D0_045,NLR1);

"""

LATTICE_FILE = 'lattice.madx'
with open(LATTICE_FILE, 'w') as f:
    f.write(lattice_file)


comm = synergia.utils.Commxx(True)
collective = synergia.simulation.Dummy_collective_operator('stub')

lattice = synergia.lattice.MadX_reader().get_lattice('iota', LATTICE_FILE)
for el in lattice.get_elements():
    if not el.has_string_attribute('extractor_type'):
        el.set_string_attribute('extractor_type', 'chef_map')

stepper = synergia.simulation.Split_operator_stepper_elements(
    lattice,
    1, # map_order
    collective,
    5 # num_steps
)


bunch = synergia.optics.generate_matched_bunch_transverse(
    stepper.get_lattice_simulator(),
    emit_x=2.5e-06, # m-rad, RMS
    emit_y=2.5e-06, # m-rad, RMS
    rms_z=0.0, # z bunch size
    dpop=0.0, # unitless, RMS \frac{\delta p}{p_{tot}}
    num_real_particles=int(100000000000.0), # real particles, used for space charge, impedance, etc
    num_macro_particles=10000, # Used for PIC calculations
    seed=349250524
)



bunch_simulator = synergia.simulation.Bunch_simulator(bunch)
bunch_simulator.add_per_step(synergia.bunch.Diagnostics_full2('diagnostics.h5'))
bunch_simulator.add_per_turn(synergia.bunch.Diagnostics_particles('particles.h5'), 1)

synergia.simulation.Propagator(stepper).propagate(
    bunch_simulator,
    5, # number of turns
    0, # max_turns, Number of turns to run before writing checkpoint and stopping
       # When max_turns is 0, the simulation continues until the end.
    2, # verbosity
)
