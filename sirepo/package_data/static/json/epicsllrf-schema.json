{
    "constants": {
        "inProgressText": "Reading",
        "epicsModelPrefix": "LLRFSim",
        "epicsPlots": {
            "waveformAReport": {
                "x": "LLRFSim_Pulse:time_step",
                "y1": "LLRFSim_Gen:Ig",
                "y2": "LLRFSim_Cav1:Vt",
                "y3": "LLRFSim_Cav1:Vr"
            },
            "waveformBReport": {
                "x": "LLRFSim_Pulse:time_step",
                "y1": "LLRFSim_Gen:phase",
                "y2": "LLRFSim_Cav1:tphase",
                "y3": "LLRFSim_Cav1:rphase"
            },
            "waveformCReport": {
                "x": "LLRFSim_Pulse:time_step",
                "y1": "LLRFSim_Gen:Ig",
                "y2": "LLRFSim_Cav2:Vt",
                "y3": "LLRFSim_Cav2:Vr"
            },
            "waveformDReport": {
                "x": "LLRFSim_Pulse:time_step",
                "y1": "LLRFSim_Gen:phase",
                "y2": "LLRFSim_Cav2:tphase",
                "y3": "LLRFSim_Cav2:rphase"
            },
            "plotLabels": {
                "LLRFSim_Pulse:time_step": "Time [s]",
                "LLRFSim_Gen:Ig": "Forward [V]",
                "LLRFSim_Cav1:Vt": "Probe [V]",
                "LLRFSim_Cav1:Vr": "Reflected [V]",
                "LLRFSim_Gen:phase": "Forward [rad]",
                "LLRFSim_Cav1:tphase": "Probe [rad]",
                "LLRFSim_Cav1:rphase": "Reflected [rad]",
                "LLRFSim_Cav2:Vt": "Probe [V]",
                "LLRFSim_Cav2:Vr": "Reflected [V]",
                "LLRFSim_Cav2:tphase": "Probe [rad]",
                "LLRFSim_Cav2:rphase": "Reflected [rad]"
            }
        }
    },
    "enum": {
        "UpdateFrequency": [
            ["0.5", "0.5"],
            ["1", "1"],
            ["2", "2"],
            ["5", "5"],
            ["10", "10"]
        ]
    },
    "dynamicFiles": {
        "sirepoLibs": {
            "js": ["epicsllrf.js"],
            "css": [
                "epicsllrf.css"
            ]
        }
    },
    "localRoutes": {
        "source": {
            "config": {
                "controller": "epicsllrfController as source",
                "templateUrl": "/static/html/epicsllrf-source.html"
            }
        }
    },
    "model": {
        "LLRFSim_Gen": {
            "phiG": ["Drive Phase [rad]", "EpicsFloat", 0, "Generator current envelope"],
            "amp": ["Amplitude [V]", "EpicsFloat", 0],
            "start": ["Start of Pulse [s]", "EpicsFloat", 0],
            "duration": ["Pulse Duration [s]", "EpicsFloat", 0],
            "rho": ["rho", "EpicsFloat", 0],
            "wS": ["wS", "EpicsFloat", 0],
            "phiS": ["phiS", "EpicsFloat", 0],
            "I0S": ["I0S", "EpicsFloat", 0],
            "Ig": ["", "ReadOnlyFloatArray", []],
            "phase": ["", "ReadOnlyFloatArray", []]
        },
        "LLRFSim_Cav1": {
            "Q": ["Q", "EpicsFloat", 0, "quality factor"],
            "R": ["R [Ohm]", "EpicsFloat", 0, "shunt resistance"],
            "Z0": ["Z0 [Ohm]", "EpicsFloat", 0, "characteristic impedance"],
            "beta": ["beta", "EpicsFloat", 0, "coupling factor"],
            "dw": ["dw", "EpicsFloat", 0, "cavity detuning"],
            "phiC": ["phiC [rad]", "EpicsFloat", 0, "voltage IQ-demodulation phase"],
            "w0": ["w0 [rad/s]", "EpicsFloat", 0, "resonance frequency"],
            "wC": ["wC [rad/s]", "EpicsFloat", 0, "voltage IQ-demodulation frequency"],
            "Vt": ["", "ReadOnlyFloatArray", []],
            "Vr": ["", "ReadOnlyFloatArray", []],
            "tphase": ["", "ReadOnlyFloatArray", []],
            "rphase": ["", "ReadOnlyFloatArray", []]
        },
        "LLRFSim_Cav2": {
            "Q": ["Q", "EpicsFloat", 0, "quality factor"],
            "R": ["R [Ohm]", "EpicsFloat", 0, "shunt resistance"],
            "Z0": ["Z0 [Ohm]", "EpicsFloat", 0, "characteristic impedance"],
            "beta": ["beta", "EpicsFloat", 0, "coupling factor"],
            "dw": ["dw", "EpicsFloat", 0, "cavity detuning"],
            "phiC": ["phiC [rad]", "EpicsFloat", 0, "voltage IQ-demodulation phase"],
            "w0": ["w0 [rad/s]", "EpicsFloat", 0, "resonance frequency"],
            "wC": ["wC [rad/s]", "EpicsFloat", 0, "voltage IQ-demodulation frequency"],
            "Vt": ["", "ReadOnlyFloatArray", []],
            "Vr": ["", "ReadOnlyFloatArray", []],
            "tphase": ["", "ReadOnlyFloatArray", []],
            "rphase": ["", "ReadOnlyFloatArray", []]
        },
        "LLRFSim_Pulse": {
            "num_pulses": ["Pulse Number", "EpicsInteger", 0, "number of pulses"],
            "time_step": ["Timestep", "EpicsFloat", 0]
        },
        "epicsServer": {
            "serverAddress": ["Network Address", "String", "localhost:5064", "EPICS server network address, $\\text{<host>:<port>}$"],
            "updateFrequency": ["Update Frequency [Hz]", "UpdateFrequency", "0.5"]
        },
        "simulationStatus": {},
        "waveformAReport": {},
        "waveformBReport": {},
        "waveformCReport": {},
        "waveformDReport": {}
    },
    "strings": {
        "completionState": "",
        "typeOfSimulation": "monitor"
    },
    "view": {
        "LLRFSim_Gen": {
            "title": "Gen",
            "basic": [
                "phiG",
                "amp",
                "start",
                "duration",
                "rho"
            ],
            "advanced": []
        },
        "simulationStatus": {
            "title": "EPICS Monitor",
            "advanced": [
                "epicsServer.serverAddress",
                "epicsServer.updateFrequency"
            ]
        },
        "waveformAReport": {
            "title": "Voltage Cav1",
            "hasDataFile": false,
            "advanced": []
        },
        "waveformBReport": {
            "title": "Phase Cav1",
            "hasDataFile": false,
            "advanced": []
        },
        "waveformCReport": {
            "title": "Voltage Cav2",
            "hasDataFile": false,
            "advanced": []
        },
        "waveformDReport": {
            "title": "Phase Cav2",
            "hasDataFile": false,
            "advanced": []
        }
    }
}
