# -*- python -*-
from pykern import pkio
from pykern.pkdebug import pkdlog, pkdexc
import os
import papermill
import sirepo.util

# POSIT: Matches mask_path in
# https://github.com/radiasoft/raydata/blob/main/AnalysisNotebooks/XPCS_SAXS/XPCS_SAXS.ipynb
_MASK_DIR = 'masks'


def _main():
    try:
        # Creating the directory acts as a lock. If we are able to
        # create the dir then we get the "lock". If the dir already
        # exists then another agent has it locked or the analysis is
        # completed.
        os.makedirs('{{ scan_dir }}')
    except FileExistsError:
        # TODO(e-carlin): It would be better to get the actual state
        # of the job (ex running, error) and report that back.
        return
    # TODO(e-carlin): this save_chdir will have a path that doesn't
    # make sense on user's machine when user downloads parameters.py
    # (could expose our paths too)
    with pkio.save_chdir('{{ scan_dir }}'):
        if '{{ mask_path }}':
            d = pkio.py_path(_MASK_DIR)
            pkio.mkdir_parent(d)
            for f, b in sirepo.util.read_zip('{{ mask_path }}'):
                d.join(f).write_binary(b)
        for f, b in sirepo.util.read_zip('{{ input_name }}'):
            pkio.py_path().join(f).write_binary(b)
        for n in pkio.sorted_glob('*.ipynb'):
            try:
                papermill.execute_notebook(
                    input_path=str(n),
                    kernel_name='py3',
                    log_output=True,
                    output_path='{{ output_name }}',
                    parameters=dict(uid='{{ scan_uuid }}'),
                )
            except Exception:
                pkdlog(
                    'Error running uid={} notebook={} error={}',
                    n,
                    '{{ scan_uid }}',
                    pkdexc(),
                )
                raise

_main()
