
from keras.callbacks import CSVLogger

model.compile(loss='{{ neuralNet_losses }}', optimizer='{{ neuralNet_optimizer }}')
model.fit(
    x=train[:, in_idx],
    y=train[:, out_idx],
    validation_data=(validate[:, in_idx], validate[:, out_idx]),
    batch_size={{ neuralNet_batch_size }},
    shuffle={% if neuralNet_shuffle == '1' %}True{% else %}False{% endif %},
    epochs={{ neuralNet_epochs }},
    verbose=False,
    callbacks=[CSVLogger('{{ fitCSVFile }}')],
)
np.save('{{ testFile }}', test[:, out_idx])
np.save('{{ predictFile }}', model.predict(x=test[:, in_idx]))
