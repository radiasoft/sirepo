def _put_sim_files():
    for f in ("{{ dataFile }}", "{{ dmpOutputFile }}"):
        sirepo.mpi.restrict_op_to_first_rank(lambda: sirepo.sim_data.get_class("radia").put_sim_file("{{ simId }}", f, f))

with radia_util.MPI() as m:
{% if solverMode == "reset" %}
    radia_util.reset()
{% endif %}
    g_id, id_map = _build_radia_geom()
    g_data = radia_util.geom_to_data(g_id, name="{{ geomName }}")
    _write_dict_to_h5(g_data, "{{ h5ObjPath }}")
    _write_dict_to_h5(id_map, "{{ h5IdMapPath }}")

{% if solverMode == "solve" %}
    res = radia_util.solve(g_id, {{ solvePrec }}, {{ solveMaxIter }}, {{ solveMethod }})
    m.barrier()
    _write_dict_to_h5(res, "{{ h5SolutionPath }}")
{% endif %}

{% if viewType == VIEW_TYPE_FIELD %}
    field = None
{% if fieldType == FIELD_TYPE_MAG_M %}
    field = radia_util.get_magnetization(g_id)
{% elif fieldType in POINT_FIELD_TYPES %}
    field = radia_util.get_field(g_id, "{{ fieldType }}", {{ fieldPoints }})
{% endif %}
    m.barrier()
    if field:
        g_data = radia_util.vector_field_to_data(g_id, "{{ geomName }}", field, radia_util.FIELD_UNITS["{{ fieldType }}"])
        _write_dict_to_h5(g_data, "{{ h5FieldPath }}")
{% endif %}
    sirepo.mpi.restrict_op_to_first_rank(lambda: _write_dmp(g_id, "{{ dmpOutputFile }}"))
    _put_sim_files()
