
import sirepo.template.radia
import sirepo.mpi
from pykern.pkcollections import PKDict
from pykern import pkjson
from sirepo.template import radia_util

_SRW_ZIP = "fieldLineoutAnimation.zip"

def field_data():
    return sirepo.template.radia.generate_field_data(
        "{{ sim_id }}",
        sirepo.template.radia.get_g_id(),
        "{{ name }}",
        "{{ f_type }}",
        [PKDict({{ f_path }})]
    ).data[0].vectors


def _write_files(fields):
    pkjson.dump_pretty(fields, "field_data.json")
    sirepo.template.radia.save_field_srw({{ gap }}, fields, "{{ beam_axis }}", _SRW_ZIP)
    sirepo.sim_data.get_class("radia").put_sim_file("{{ sim_id }}", _SRW_ZIP, _SRW_ZIP)


with radia_util.MPI() as m:
    f = field_data()
    m.barrier()
    sirepo.mpi.restrict_op_to_first_rank(lambda: _write_files(f))

